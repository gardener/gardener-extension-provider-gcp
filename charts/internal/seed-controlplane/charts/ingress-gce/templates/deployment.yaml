apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-gce
  namespace: {{ .Release.Namespace }}
  labels:
    app: kubernetes
    role: glbc
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: kubernetes
      role: glbc
  template:
    metadata:
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app: kubernetes
        role: glbc
        gardener.cloud/role: controlplane
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.resources.gardener.cloud/to-kube-apiserver-tcp-443: allowed
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
    spec:
      automountServiceAccountToken: false
      priorityClassName: system-cluster-critical
      containers:
        - name: glbc
          image: {{ index .Values.images "ingress-gce" }}
          command:
            - /glbc
            - --config-file-path=/etc/kubernetes/cloudprovider/cloudprovider.conf
            - --healthz-port=8086
            - --logtostderr
            - --sync-period=600s
            - --default-backend-service=kube-system/default-http-backend
            - --running-in-cluster=false
            - --run-l4-netlb-controller=true
            - --enable-l4ilb-dual-stack=true
            - --enable-l4netlb-dual-stack=true
            # services of Type:LoadBalancer with Internal annotation `cloud.google.com/l4-rbs: enabled`
            # will be processed by this controller
            - --run-l4-controller=true
            - --kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
            - --leader-elect=true
            - --v=2
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /srv/cloudprovider/serviceaccount.json
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8086
              scheme: HTTP
            initialDelaySeconds: 30
            # healthz reaches out to GCE
            periodSeconds: 30
            timeoutSeconds: 15
            successThreshold: 1
            failureThreshold: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          {{- with .Values.resources }}
          resources:
{{ toYaml . | indent 12 }}
          {{- end }}
          volumeMounts:
            - name: cloud-provider-config
              mountPath: /etc/kubernetes/cloudprovider
            - name: cloudprovider
              mountPath: /srv/cloudprovider
            - name: kubeconfig
              mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
        - name: cloud-provider-config
          configMap:
            name: cloud-provider-config
        - name: cloudprovider
          secret:
            secretName: cloudprovider
        - name: kubeconfig
          projected:
            defaultMode: 420
            sources:
            - secret:
                items:
                  - key: kubeconfig
                    path: kubeconfig
                name: {{ .Values.global.genericTokenKubeconfigSecretName }}
                optional: false
            - secret:
                items:
                  - key: token
                    path: token
                name: shoot-access-cloud-controller-manager
                optional: false
